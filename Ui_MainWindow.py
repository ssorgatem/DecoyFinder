# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/adria/ownCloud/DecoyFinder/MainWindow.ui'
#
# Created: Tue Jan 20 09:47:59 2015
#      by: PyQt4 UI code generator 4.10.4
#
# WARNING! All changes made in this file will be lost!

from PySide import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.resize(700, 573)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/images/icon.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        MainWindow.setDocumentMode(False)
        MainWindow.setUnifiedTitleAndToolBarOnMac(True)
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.verticalLayout_4 = QtGui.QVBoxLayout(self.centralwidget)
        self.verticalLayout_4.setObjectName(_fromUtf8("verticalLayout_4"))
        self.tabWidget = QtGui.QTabWidget(self.centralwidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setObjectName(_fromUtf8("tabWidget"))
        self.tabWidgetPage1 = QtGui.QWidget()
        self.tabWidgetPage1.setObjectName(_fromUtf8("tabWidgetPage1"))
        self.verticalLayout_5 = QtGui.QVBoxLayout(self.tabWidgetPage1)
        self.verticalLayout_5.setObjectName(_fromUtf8("verticalLayout_5"))
        self.kdecoysCheckBox = QtGui.QCheckBox(self.tabWidgetPage1)
        self.kdecoysCheckBox.setObjectName(_fromUtf8("kdecoysCheckBox"))
        self.verticalLayout_5.addWidget(self.kdecoysCheckBox)
        self.horizontalLayout = QtGui.QHBoxLayout()
        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
        self.verticalLayout = QtGui.QVBoxLayout()
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.horizontalLayout_4 = QtGui.QHBoxLayout()
        self.horizontalLayout_4.setObjectName(_fromUtf8("horizontalLayout_4"))
        spacerItem = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem)
        self.label = QtGui.QLabel(self.tabWidgetPage1)
        self.label.setObjectName(_fromUtf8("label"))
        self.horizontalLayout_4.addWidget(self.label)
        spacerItem1 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem1)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.verticalLayout_8 = QtGui.QVBoxLayout()
        self.verticalLayout_8.setContentsMargins(-1, 14, -1, 14)
        self.verticalLayout_8.setObjectName(_fromUtf8("verticalLayout_8"))
        self.verticalLayout.addLayout(self.verticalLayout_8)
        self.horizontalLayout_6 = QtGui.QHBoxLayout()
        self.horizontalLayout_6.setObjectName(_fromUtf8("horizontalLayout_6"))
        self.addQueryButton = QtGui.QPushButton(self.tabWidgetPage1)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("list-add"))
        self.addQueryButton.setIcon(icon)
        self.addQueryButton.setObjectName(_fromUtf8("addQueryButton"))
        self.horizontalLayout_6.addWidget(self.addQueryButton)
        spacerItem2 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem2)
        self.clearActives = QtGui.QPushButton(self.tabWidgetPage1)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("edit-clear"))
        self.clearActives.setIcon(icon)
        self.clearActives.setObjectName(_fromUtf8("clearActives"))
        self.horizontalLayout_6.addWidget(self.clearActives)
        self.verticalLayout.addLayout(self.horizontalLayout_6)
        self.queryList = QtGui.QListWidget(self.tabWidgetPage1)
        self.queryList.setObjectName(_fromUtf8("queryList"))
        self.verticalLayout.addWidget(self.queryList)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.kdecoysFrame = QtGui.QFrame(self.tabWidgetPage1)
        self.kdecoysFrame.setFrameShape(QtGui.QFrame.NoFrame)
        self.kdecoysFrame.setLineWidth(0)
        self.kdecoysFrame.setObjectName(_fromUtf8("kdecoysFrame"))
        self.verticalLayout_6 = QtGui.QVBoxLayout(self.kdecoysFrame)
        self.verticalLayout_6.setObjectName(_fromUtf8("verticalLayout_6"))
        self.horizontalLayout_2 = QtGui.QHBoxLayout()
        self.horizontalLayout_2.setObjectName(_fromUtf8("horizontalLayout_2"))
        spacerItem3 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem3)
        self.label_3 = QtGui.QLabel(self.kdecoysFrame)
        self.label_3.setObjectName(_fromUtf8("label_3"))
        self.horizontalLayout_2.addWidget(self.label_3)
        spacerItem4 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem4)
        self.verticalLayout_6.addLayout(self.horizontalLayout_2)
        self.verticalLayout_7 = QtGui.QVBoxLayout()
        self.verticalLayout_7.setContentsMargins(-1, 14, -1, 14)
        self.verticalLayout_7.setObjectName(_fromUtf8("verticalLayout_7"))
        spacerItem5 = QtGui.QSpacerItem(0, 0, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Preferred)
        self.verticalLayout_7.addItem(spacerItem5)
        self.verticalLayout_6.addLayout(self.verticalLayout_7)
        self.horizontalLayout_9 = QtGui.QHBoxLayout()
        self.horizontalLayout_9.setObjectName(_fromUtf8("horizontalLayout_9"))
        self.addDecoysButton = QtGui.QPushButton(self.kdecoysFrame)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("list-add"))
        self.addDecoysButton.setIcon(icon)
        self.addDecoysButton.setObjectName(_fromUtf8("addDecoysButton"))
        self.horizontalLayout_9.addWidget(self.addDecoysButton)
        spacerItem6 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem6)
        self.clearDecoys = QtGui.QPushButton(self.kdecoysFrame)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("edit-clear"))
        self.clearDecoys.setIcon(icon)
        self.clearDecoys.setObjectName(_fromUtf8("clearDecoys"))
        self.horizontalLayout_9.addWidget(self.clearDecoys)
        self.verticalLayout_6.addLayout(self.horizontalLayout_9)
        self.decoyList = QtGui.QListWidget(self.kdecoysFrame)
        self.decoyList.setObjectName(_fromUtf8("decoyList"))
        self.verticalLayout_6.addWidget(self.decoyList)
        self.horizontalLayout.addWidget(self.kdecoysFrame)
        self.line = QtGui.QFrame(self.tabWidgetPage1)
        self.line.setFrameShape(QtGui.QFrame.VLine)
        self.line.setFrameShadow(QtGui.QFrame.Sunken)
        self.line.setObjectName(_fromUtf8("line"))
        self.horizontalLayout.addWidget(self.line)
        self.verticalLayout_2 = QtGui.QVBoxLayout()
        self.verticalLayout_2.setObjectName(_fromUtf8("verticalLayout_2"))
        self.horizontalLayout_5 = QtGui.QHBoxLayout()
        self.horizontalLayout_5.setObjectName(_fromUtf8("horizontalLayout_5"))
        spacerItem7 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem7)
        self.label_2 = QtGui.QLabel(self.tabWidgetPage1)
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.horizontalLayout_5.addWidget(self.label_2)
        spacerItem8 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem8)
        self.verticalLayout_2.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_3 = QtGui.QHBoxLayout()
        self.horizontalLayout_3.setObjectName(_fromUtf8("horizontalLayout_3"))
        self.zinclabel = QtGui.QLabel(self.tabWidgetPage1)
        self.zinclabel.setEnabled(False)
        self.zinclabel.setObjectName(_fromUtf8("zinclabel"))
        self.horizontalLayout_3.addWidget(self.zinclabel)
        self.zsubComboBox = QtGui.QComboBox(self.tabWidgetPage1)
        self.zsubComboBox.setEnabled(False)
        self.zsubComboBox.setObjectName(_fromUtf8("zsubComboBox"))
        self.horizontalLayout_3.addWidget(self.zsubComboBox)
        spacerItem9 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem9)
        self.cacheCheckBox = QtGui.QCheckBox(self.tabWidgetPage1)
        self.cacheCheckBox.setEnabled(False)
        self.cacheCheckBox.setChecked(True)
        self.cacheCheckBox.setObjectName(_fromUtf8("cacheCheckBox"))
        self.horizontalLayout_3.addWidget(self.cacheCheckBox)
        self.verticalLayout_2.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_8 = QtGui.QHBoxLayout()
        self.horizontalLayout_8.setObjectName(_fromUtf8("horizontalLayout_8"))
        self.dbComboBox = QtGui.QComboBox(self.tabWidgetPage1)
        self.dbComboBox.setObjectName(_fromUtf8("dbComboBox"))
        self.dbComboBox.addItem(_fromUtf8(""))
        self.dbComboBox.addItem(_fromUtf8(""))
        self.dbComboBox.addItem(_fromUtf8(""))
        self.dbComboBox.addItem(_fromUtf8(""))
        self.dbComboBox.addItem(_fromUtf8(""))
        self.horizontalLayout_8.addWidget(self.dbComboBox)
        self.addDButton = QtGui.QPushButton(self.tabWidgetPage1)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("list-add"))
        self.addDButton.setIcon(icon)
        self.addDButton.setObjectName(_fromUtf8("addDButton"))
        self.horizontalLayout_8.addWidget(self.addDButton)
        spacerItem10 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem10)
        self.clearDB = QtGui.QPushButton(self.tabWidgetPage1)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("edit-clear"))
        self.clearDB.setIcon(icon)
        self.clearDB.setObjectName(_fromUtf8("clearDB"))
        self.horizontalLayout_8.addWidget(self.clearDB)
        self.verticalLayout_2.addLayout(self.horizontalLayout_8)
        self.dbListWidget = QtGui.QListWidget(self.tabWidgetPage1)
        self.dbListWidget.setObjectName(_fromUtf8("dbListWidget"))
        self.verticalLayout_2.addWidget(self.dbListWidget)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        self.verticalLayout_5.addLayout(self.horizontalLayout)
        self.formLayout_2 = QtGui.QFormLayout()
        self.formLayout_2.setFieldGrowthPolicy(QtGui.QFormLayout.ExpandingFieldsGrow)
        self.formLayout_2.setObjectName(_fromUtf8("formLayout_2"))
        self.outDirButton = QtGui.QPushButton(self.tabWidgetPage1)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("document-save-as"))
        self.outDirButton.setIcon(icon)
        self.outDirButton.setObjectName(_fromUtf8("outDirButton"))
        self.formLayout_2.setWidget(0, QtGui.QFormLayout.LabelRole, self.outDirButton)
        self.outputDirectoryLineEdit = QtGui.QLineEdit(self.tabWidgetPage1)
        self.outputDirectoryLineEdit.setObjectName(_fromUtf8("outputDirectoryLineEdit"))
        self.formLayout_2.setWidget(0, QtGui.QFormLayout.FieldRole, self.outputDirectoryLineEdit)
        self.verticalLayout_5.addLayout(self.formLayout_2)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("system-search"))
        self.tabWidget.addTab(self.tabWidgetPage1, icon, _fromUtf8(""))
        self.tab = QtGui.QWidget()
        self.tab.setObjectName(_fromUtf8("tab"))
        self.gridLayout = QtGui.QGridLayout(self.tab)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.resultsTable = QtGui.QTableWidget(self.tab)
        self.resultsTable.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
        self.resultsTable.setAlternatingRowColors(True)
        self.resultsTable.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
        self.resultsTable.setObjectName(_fromUtf8("resultsTable"))
        self.resultsTable.setColumnCount(7)
        self.resultsTable.setRowCount(0)
        item = QtGui.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter|QtCore.Qt.AlignCenter)
        self.resultsTable.setHorizontalHeaderItem(0, item)
        item = QtGui.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter|QtCore.Qt.AlignCenter)
        self.resultsTable.setHorizontalHeaderItem(1, item)
        item = QtGui.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter|QtCore.Qt.AlignCenter)
        self.resultsTable.setHorizontalHeaderItem(2, item)
        item = QtGui.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter|QtCore.Qt.AlignCenter)
        self.resultsTable.setHorizontalHeaderItem(3, item)
        item = QtGui.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter|QtCore.Qt.AlignCenter)
        self.resultsTable.setHorizontalHeaderItem(4, item)
        item = QtGui.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter|QtCore.Qt.AlignCenter)
        self.resultsTable.setHorizontalHeaderItem(5, item)
        item = QtGui.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter|QtCore.Qt.AlignCenter)
        self.resultsTable.setHorizontalHeaderItem(6, item)
        self.resultsTable.verticalHeader().setSortIndicatorShown(True)
        self.resultsTable.verticalHeader().setStretchLastSection(True)
        self.gridLayout.addWidget(self.resultsTable, 1, 0, 1, 1)
        self.formLayout = QtGui.QFormLayout()
        self.formLayout.setObjectName(_fromUtf8("formLayout"))
        self.informationSavedToLabel = QtGui.QLabel(self.tab)
        self.informationSavedToLabel.setObjectName(_fromUtf8("informationSavedToLabel"))
        self.formLayout.setWidget(0, QtGui.QFormLayout.LabelRole, self.informationSavedToLabel)
        self.informationSavedToLineEdit = QtGui.QLineEdit(self.tab)
        self.informationSavedToLineEdit.setReadOnly(True)
        self.informationSavedToLineEdit.setObjectName(_fromUtf8("informationSavedToLineEdit"))
        self.formLayout.setWidget(0, QtGui.QFormLayout.FieldRole, self.informationSavedToLineEdit)
        self.gridLayout.addLayout(self.formLayout, 0, 0, 1, 1)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("text-x-generic"))
        self.tabWidget.addTab(self.tab, icon, _fromUtf8(""))
        self.tabWidgetPage2 = QtGui.QWidget()
        self.tabWidgetPage2.setObjectName(_fromUtf8("tabWidgetPage2"))
        self.verticalLayout_3 = QtGui.QVBoxLayout(self.tabWidgetPage2)
        self.verticalLayout_3.setObjectName(_fromUtf8("verticalLayout_3"))
        self.verticalLayout_9 = QtGui.QVBoxLayout()
        self.verticalLayout_9.setObjectName(_fromUtf8("verticalLayout_9"))
        self.groupBox = QtGui.QGroupBox(self.tabWidgetPage2)
        self.groupBox.setTitle(_fromUtf8(""))
        self.groupBox.setObjectName(_fromUtf8("groupBox"))
        self.verticalLayout_10 = QtGui.QVBoxLayout(self.groupBox)
        self.verticalLayout_10.setObjectName(_fromUtf8("verticalLayout_10"))
        self.MwBasedRB = QtGui.QRadioButton(self.groupBox)
        self.MwBasedRB.setObjectName(_fromUtf8("MwBasedRB"))
        self.verticalLayout_10.addWidget(self.MwBasedRB)
        self.descriptorBasedRB = QtGui.QRadioButton(self.groupBox)
        self.descriptorBasedRB.setChecked(True)
        self.descriptorBasedRB.setObjectName(_fromUtf8("descriptorBasedRB"))
        self.verticalLayout_10.addWidget(self.descriptorBasedRB)
        self.verticalLayout_9.addWidget(self.groupBox)
        self.optionsGroupBox = QtGui.QGroupBox(self.tabWidgetPage2)
        self.optionsGroupBox.setTitle(_fromUtf8(""))
        self.optionsGroupBox.setCheckable(False)
        self.optionsGroupBox.setObjectName(_fromUtf8("optionsGroupBox"))
        self._3 = QtGui.QFormLayout(self.optionsGroupBox)
        self._3.setFieldGrowthPolicy(QtGui.QFormLayout.ExpandingFieldsGrow)
        self._3.setLabelAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self._3.setFormAlignment(QtCore.Qt.AlignCenter)
        self._3.setObjectName(_fromUtf8("_3"))
        self.tanimotoCutoffLabel = QtGui.QLabel(self.optionsGroupBox)
        self.tanimotoCutoffLabel.setObjectName(_fromUtf8("tanimotoCutoffLabel"))
        self._3.setWidget(0, QtGui.QFormLayout.LabelRole, self.tanimotoCutoffLabel)
        self.tanimotoBox = QtGui.QDoubleSpinBox(self.optionsGroupBox)
        self.tanimotoBox.setMaximum(1.0)
        self.tanimotoBox.setSingleStep(0.1)
        self.tanimotoBox.setObjectName(_fromUtf8("tanimotoBox"))
        self._3.setWidget(0, QtGui.QFormLayout.FieldRole, self.tanimotoBox)
        self.decoyDecoyTanimotoLabel = QtGui.QLabel(self.optionsGroupBox)
        self.decoyDecoyTanimotoLabel.setObjectName(_fromUtf8("decoyDecoyTanimotoLabel"))
        self._3.setWidget(1, QtGui.QFormLayout.LabelRole, self.decoyDecoyTanimotoLabel)
        self.dTanimotoBox = QtGui.QDoubleSpinBox(self.optionsGroupBox)
        self.dTanimotoBox.setMaximum(1.0)
        self.dTanimotoBox.setSingleStep(0.1)
        self.dTanimotoBox.setObjectName(_fromUtf8("dTanimotoBox"))
        self._3.setWidget(1, QtGui.QFormLayout.FieldRole, self.dTanimotoBox)
        self.hBALabel_2 = QtGui.QLabel(self.optionsGroupBox)
        self.hBALabel_2.setObjectName(_fromUtf8("hBALabel_2"))
        self._3.setWidget(2, QtGui.QFormLayout.LabelRole, self.hBALabel_2)
        self.hbaBox = QtGui.QSpinBox(self.optionsGroupBox)
        self.hbaBox.setObjectName(_fromUtf8("hbaBox"))
        self._3.setWidget(2, QtGui.QFormLayout.FieldRole, self.hbaBox)
        self.hBDLabel = QtGui.QLabel(self.optionsGroupBox)
        self.hBDLabel.setObjectName(_fromUtf8("hBDLabel"))
        self._3.setWidget(3, QtGui.QFormLayout.LabelRole, self.hBDLabel)
        self.hbdBox = QtGui.QSpinBox(self.optionsGroupBox)
        self.hbdBox.setObjectName(_fromUtf8("hbdBox"))
        self._3.setWidget(3, QtGui.QFormLayout.FieldRole, self.hbdBox)
        self.molecularWeightLabel = QtGui.QLabel(self.optionsGroupBox)
        self.molecularWeightLabel.setObjectName(_fromUtf8("molecularWeightLabel"))
        self._3.setWidget(4, QtGui.QFormLayout.LabelRole, self.molecularWeightLabel)
        self.molwtBox = QtGui.QSpinBox(self.optionsGroupBox)
        self.molwtBox.setMaximum(999)
        self.molwtBox.setObjectName(_fromUtf8("molwtBox"))
        self._3.setWidget(4, QtGui.QFormLayout.FieldRole, self.molwtBox)
        self.rtotationalBondsLabel = QtGui.QLabel(self.optionsGroupBox)
        self.rtotationalBondsLabel.setObjectName(_fromUtf8("rtotationalBondsLabel"))
        self._3.setWidget(5, QtGui.QFormLayout.LabelRole, self.rtotationalBondsLabel)
        self.rotbBox = QtGui.QSpinBox(self.optionsGroupBox)
        self.rotbBox.setObjectName(_fromUtf8("rotbBox"))
        self._3.setWidget(5, QtGui.QFormLayout.FieldRole, self.rotbBox)
        self.clogPLabel = QtGui.QLabel(self.optionsGroupBox)
        self.clogPLabel.setObjectName(_fromUtf8("clogPLabel"))
        self._3.setWidget(6, QtGui.QFormLayout.LabelRole, self.clogPLabel)
        self.clogpBox = QtGui.QDoubleSpinBox(self.optionsGroupBox)
        self.clogpBox.setSingleStep(0.1)
        self.clogpBox.setObjectName(_fromUtf8("clogpBox"))
        self._3.setWidget(6, QtGui.QFormLayout.FieldRole, self.clogpBox)
        spacerItem11 = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self._3.setItem(8, QtGui.QFormLayout.LabelRole, spacerItem11)
        spacerItem12 = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self._3.setItem(8, QtGui.QFormLayout.FieldRole, spacerItem12)
        self.maximumDecoysPerActiveLigandLabel = QtGui.QLabel(self.optionsGroupBox)
        self.maximumDecoysPerActiveLigandLabel.setObjectName(_fromUtf8("maximumDecoysPerActiveLigandLabel"))
        self._3.setWidget(9, QtGui.QFormLayout.LabelRole, self.maximumDecoysPerActiveLigandLabel)
        self.decoyMaxSpinBox = QtGui.QSpinBox(self.optionsGroupBox)
        self.decoyMaxSpinBox.setMaximum(99999)
        self.decoyMaxSpinBox.setObjectName(_fromUtf8("decoyMaxSpinBox"))
        self._3.setWidget(9, QtGui.QFormLayout.FieldRole, self.decoyMaxSpinBox)
        self.decoyLimitLabel = QtGui.QLabel(self.optionsGroupBox)
        self.decoyLimitLabel.setObjectName(_fromUtf8("decoyLimitLabel"))
        self._3.setWidget(10, QtGui.QFormLayout.LabelRole, self.decoyLimitLabel)
        self.decoyMinSpinBox = QtGui.QSpinBox(self.optionsGroupBox)
        self.decoyMinSpinBox.setMaximum(99999)
        self.decoyMinSpinBox.setObjectName(_fromUtf8("decoyMinSpinBox"))
        self._3.setWidget(10, QtGui.QFormLayout.FieldRole, self.decoyMinSpinBox)
        self.stdMaxSpinBox = QtGui.QDoubleSpinBox(self.optionsGroupBox)
        self.stdMaxSpinBox.setObjectName(_fromUtf8("stdMaxSpinBox"))
        self._3.setWidget(7, QtGui.QFormLayout.FieldRole, self.stdMaxSpinBox)
        self.label_4 = QtGui.QLabel(self.optionsGroupBox)
        self.label_4.setObjectName(_fromUtf8("label_4"))
        self._3.setWidget(7, QtGui.QFormLayout.LabelRole, self.label_4)
        self.verticalLayout_9.addWidget(self.optionsGroupBox)
        self.verticalLayout_3.addLayout(self.verticalLayout_9)
        self.formLayout_6 = QtGui.QFormLayout()
        self.formLayout_6.setObjectName(_fromUtf8("formLayout_6"))
        self.cacheButton = QtGui.QPushButton(self.tabWidgetPage2)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("folder-open"))
        self.cacheButton.setIcon(icon)
        self.cacheButton.setObjectName(_fromUtf8("cacheButton"))
        self.formLayout_6.setWidget(0, QtGui.QFormLayout.LabelRole, self.cacheButton)
        self.cachDirectoryLineEdit = QtGui.QLineEdit(self.tabWidgetPage2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cachDirectoryLineEdit.sizePolicy().hasHeightForWidth())
        self.cachDirectoryLineEdit.setSizePolicy(sizePolicy)
        self.cachDirectoryLineEdit.setObjectName(_fromUtf8("cachDirectoryLineEdit"))
        self.formLayout_6.setWidget(0, QtGui.QFormLayout.FieldRole, self.cachDirectoryLineEdit)
        self.verticalLayout_3.addLayout(self.formLayout_6)
        self.horizontalLayout_7 = QtGui.QHBoxLayout()
        self.horizontalLayout_7.setObjectName(_fromUtf8("horizontalLayout_7"))
        spacerItem13 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem13)
        self.defaultsButton = QtGui.QPushButton(self.tabWidgetPage2)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("view-refresh"))
        self.defaultsButton.setIcon(icon)
        self.defaultsButton.setObjectName(_fromUtf8("defaultsButton"))
        self.horizontalLayout_7.addWidget(self.defaultsButton)
        spacerItem14 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem14)
        self.verticalLayout_3.addLayout(self.horizontalLayout_7)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("document-properties"))
        self.tabWidget.addTab(self.tabWidgetPage2, icon, _fromUtf8(""))
        self.verticalLayout_4.addWidget(self.tabWidget)
        self._2 = QtGui.QHBoxLayout()
        self._2.setObjectName(_fromUtf8("_2"))
        self.clearButton = QtGui.QPushButton(self.centralwidget)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("edit-clear"))
        self.clearButton.setIcon(icon)
        self.clearButton.setObjectName(_fromUtf8("clearButton"))
        self._2.addWidget(self.clearButton)
        spacerItem15 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self._2.addItem(spacerItem15)
        self.stopButton = QtGui.QPushButton(self.centralwidget)
        self.stopButton.setEnabled(False)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("process-stop"))
        self.stopButton.setIcon(icon)
        self.stopButton.setObjectName(_fromUtf8("stopButton"))
        self._2.addWidget(self.stopButton)
        spacerItem16 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self._2.addItem(spacerItem16)
        self.findDecoysButton = QtGui.QPushButton(self.centralwidget)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("system-search"))
        self.findDecoysButton.setIcon(icon)
        self.findDecoysButton.setObjectName(_fromUtf8("findDecoysButton"))
        self._2.addWidget(self.findDecoysButton)
        self.verticalLayout_4.addLayout(self._2)
        self.progressBar = QtGui.QProgressBar(self.centralwidget)
        self.progressBar.setAlignment(QtCore.Qt.AlignCenter)
        self.progressBar.setObjectName(_fromUtf8("progressBar"))
        self.verticalLayout_4.addWidget(self.progressBar)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtGui.QToolBar(MainWindow)
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.toolBar.setObjectName(_fromUtf8("toolBar"))
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionHelp = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("internet-web-browser"))
        self.actionHelp.setIcon(icon)
        self.actionHelp.setObjectName(_fromUtf8("actionHelp"))
        self.actionAbout = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("dialog-information"))
        self.actionAbout.setIcon(icon)
        self.actionAbout.setObjectName(_fromUtf8("actionAbout"))
        self.label.setBuddy(self.optionsGroupBox)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QObject.connect(self.clearButton, QtCore.SIGNAL(_fromUtf8("clicked()")), self.progressBar.reset)
        QtCore.QObject.connect(self.clearButton, QtCore.SIGNAL(_fromUtf8("clicked()")), self.statusbar.clearMessage)
        QtCore.QObject.connect(self.clearDecoys, QtCore.SIGNAL(_fromUtf8("clicked()")), self.decoyList.clear)
        QtCore.QObject.connect(self.clearButton, QtCore.SIGNAL(_fromUtf8("clicked()")), self.decoyList.clear)
        QtCore.QObject.connect(self.clearButton, QtCore.SIGNAL(_fromUtf8("clicked()")), self.dbListWidget.clear)
        QtCore.QObject.connect(self.clearDB, QtCore.SIGNAL(_fromUtf8("clicked()")), self.dbListWidget.clear)
        QtCore.QObject.connect(self.clearButton, QtCore.SIGNAL(_fromUtf8("clicked()")), self.queryList.clear)
        QtCore.QObject.connect(self.clearActives, QtCore.SIGNAL(_fromUtf8("clicked()")), self.queryList.clear)
        QtCore.QObject.connect(self.kdecoysCheckBox, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.kdecoysFrame.setVisible)
        QtCore.QObject.connect(self.clearButton, QtCore.SIGNAL(_fromUtf8("clicked()")), self.informationSavedToLineEdit.clear)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.hBALabel_2.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.hbaBox.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.hBDLabel.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.hbdBox.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.rtotationalBondsLabel.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.rotbBox.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.clogPLabel.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.clogpBox.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.molecularWeightLabel.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.molwtBox.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.tanimotoCutoffLabel.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.tanimotoBox.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.decoyDecoyTanimotoLabel.setHidden)
        QtCore.QObject.connect(self.MwBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.dTanimotoBox.setHidden)
        QtCore.QObject.connect(self.descriptorBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.label_4.setHidden)
        QtCore.QObject.connect(self.descriptorBasedRB, QtCore.SIGNAL(_fromUtf8("toggled(bool)")), self.stdMaxSpinBox.setHidden)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "DecoyFinder", None))
        self.kdecoysCheckBox.setToolTip(_translate("MainWindow", "Add new decoys to an existing decoy set", None))
        self.kdecoysCheckBox.setWhatsThis(_translate("MainWindow", "Add new decoys to an existing decoy set", None))
        self.kdecoysCheckBox.setText(_translate("MainWindow", "  Add new decoys", None))
        self.label.setToolTip(_translate("MainWindow", "Add here at least one file containing the active ligands you would like to find decoys for", None))
        self.label.setWhatsThis(_translate("MainWindow", "Add here at least one file containing the active ligands you would like to find decoys for", None))
        self.label.setText(_translate("MainWindow", "Known Active Ligands", None))
        self.addQueryButton.setToolTip(_translate("MainWindow", "Choose one or more files to add to the list", None))
        self.addQueryButton.setText(_translate("MainWindow", "Add", None))
        self.clearActives.setToolTip(_translate("MainWindow", "Remove all items from this list", None))
        self.clearActives.setText(_translate("MainWindow", "Clear", None))
        self.label_3.setToolTip(_translate("MainWindow", "Add here files containing decoy molecules for the chosen active ligands. These molecules will be directly accepted as decoys and will be included in the final output file. This is suitable for example to complete a decoy set. Decoy molecules from this list will only be taken into account during the search for decoy vs decoy tanimoto thresholds.", None))
        self.label_3.setWhatsThis(_translate("MainWindow", "Add here files containing decoy molecules for the chosen active ligands. These molecules will be directly accepted as decoys and will be included in the final output file. This is suitable, for example, to complete a decoy set. Decoy molecules from this list will only be taken into account during the search for decoy vs decoy tanimoto thresholds.", None))
        self.label_3.setText(_translate("MainWindow", "Existing Decoy files", None))
        self.addDecoysButton.setToolTip(_translate("MainWindow", "Choose one or more files to add to the list", None))
        self.addDecoysButton.setText(_translate("MainWindow", "Add", None))
        self.clearDecoys.setToolTip(_translate("MainWindow", "Remove all items from this list", None))
        self.clearDecoys.setText(_translate("MainWindow", "Clear", None))
        self.label_2.setToolTip(_translate("MainWindow", "Where you can choose where to look for new decoys", None))
        self.label_2.setWhatsThis(_translate("MainWindow", "Where you can choose where to look for new decoys", None))
        self.label_2.setText(_translate("MainWindow", "Sources of new Decoys", None))
        self.zinclabel.setToolTip(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'DejaVu Sans\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Choose the ZINC subset (by property) to use as source. They are described at <a href=\"http://zinc.docking.org/subset1/\"><span style=\" text-decoration: underline; color:#0057ae;\">http://zinc.docking.org/subset1/</span></a></p></body></html>", None))
        self.zinclabel.setWhatsThis(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'DejaVu Sans\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Choose the ZINC subset (by property) to use as source. They are described <a href=\"http://zinc.docking.org/subset1/\"><span style=\" text-decoration: underline; color:#0057ae;\">here</span></a></p></body></html>", None))
        self.zinclabel.setText(_translate("MainWindow", "ZINC subset:", None))
        self.cacheCheckBox.setToolTip(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'DejaVu Sans\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">In order to be able to look for decoys through the ZINC database, DecoyFinder needs to download little chunks of it and then remove them. If this option is enabled, DecoyFinder will not remove them and so will not need to download already downloaded files again.<br />Enable this if you have low bandwith and/or +20 GB of free disk space.</p></body></html>", None))
        self.cacheCheckBox.setWhatsThis(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'DejaVu Sans\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">In order to be able to look for decoys through the ZINC database, DecoyFinder needs to download little chunks of it and then remove them. If this option is enabled, DecoyFinder will not remove them and so will not need to download already downloaded files again.<br />Enable this if you have low bandwith and/or +20 GB of free disk space.</p></body></html>", None))
        self.cacheCheckBox.setText(_translate("MainWindow", "Use cache", None))
        self.dbComboBox.setToolTip(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'DejaVu Sans\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Here you can select the kind of source you want to add:<br />- Local files: files containing molecules located in the filesystem</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">- ZINC subset: use file from ZINC from either of these pH range subsets: </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"> - usual: usual pH range (5.75-8.25)</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"> - metal: for metalloenzymes (usual + pH 7-9.5)</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"> - single: contains only a single form of each molecule</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"> - all: contains the whole pH range (4.5-9.5)</p></body></html>", None))
        self.dbComboBox.setWhatsThis(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'DejaVu Sans\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Here you can select the kind of source you want to add:<br />- Local files: files containing molecules located in the filesystem</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">- ZINC subset: use file from ZINC from either of these pH range subsets: </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"> - usual: usual pH range (5.75-8.25)</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"> - metal: for metalloenzymes (usual + pH 7-9.5)</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"> - single: contains only a single form of each molecule</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"> - all: contains the whole pH range (4.5-9.5)</p></body></html>", None))
        self.dbComboBox.setItemText(0, _translate("MainWindow", "Select local files...", None))
        self.dbComboBox.setItemText(1, _translate("MainWindow", "ZINC single", None))
        self.dbComboBox.setItemText(2, _translate("MainWindow", "ZINC metals", None))
        self.dbComboBox.setItemText(3, _translate("MainWindow", "ZINC usual", None))
        self.dbComboBox.setItemText(4, _translate("MainWindow", "ZINC all", None))
        self.addDButton.setText(_translate("MainWindow", "Add", None))
        self.clearDB.setToolTip(_translate("MainWindow", "Remove all items from this list", None))
        self.clearDB.setText(_translate("MainWindow", "Clear", None))
        self.outDirButton.setToolTip(_translate("MainWindow", "Choose the name of the file where found decoys are going to be saved", None))
        self.outDirButton.setWhatsThis(_translate("MainWindow", "Choose the name of the file where found decoys are going to be saved", None))
        self.outDirButton.setText(_translate("MainWindow", "Output file", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabWidgetPage1), _translate("MainWindow", "Find", None))
        item = self.resultsTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Active", None))
        item = self.resultsTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Decoys found", None))
        item = self.resultsTable.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "HBA", None))
        item = self.resultsTable.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "HBD", None))
        item = self.resultsTable.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "logP", None))
        item = self.resultsTable.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "M. weight", None))
        item = self.resultsTable.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Rot. bonds", None))
        self.informationSavedToLabel.setText(_translate("MainWindow", "This information can be found at", None))
        self.informationSavedToLineEdit.setToolTip(_translate("MainWindow", "This file is intended to be open as a spreadsheet, preferably with Calc, Excel, Gnumeric or a similar application.", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Run Statistics", None))
        self.MwBasedRB.setText(_translate("MainWindow", "Molecular weight based decoys", None))
        self.descriptorBasedRB.setText(_translate("MainWindow", "Molecular descriptor based decoys", None))
        self.tanimotoCutoffLabel.setToolTip(_translate("MainWindow", "Here you can set the maximum Tanimoto value between a decoy molecule and its respective active ligand. The lower the value, the more chemically different will be the accepted decoys.", None))
        self.tanimotoCutoffLabel.setWhatsThis(_translate("MainWindow", "Here you can set the maximum Tanimoto value between a decoy molecule and its respective active ligand. The lower the value, the more chemically different will be the accepted decoys.", None))
        self.tanimotoCutoffLabel.setText(_translate("MainWindow", "Active ligand vs Decoy Tanimoto threshold", None))
        self.decoyDecoyTanimotoLabel.setToolTip(_translate("MainWindow", "Here you can set the maximum Tanimoto value between decoys. This is useful to get a set of chemically different decoys. The lower the value, the more chemically different will be the accepted decoys. When set to 1.00, decoy vs decoy tanimoto calculation will be skipped.", None))
        self.decoyDecoyTanimotoLabel.setWhatsThis(_translate("MainWindow", "Here you can set the maximum Tanimoto value between decoys. This is useful to get a set of chemically different decoys. The lower the value, the more chemically different will be the accepted decoys. When set to 1.00, decoy vs decoy tanimoto calculation will be skipped.", None))
        self.decoyDecoyTanimotoLabel.setText(_translate("MainWindow", "Decoy vs Decoy Tanimoto threshold", None))
        self.hBALabel_2.setToolTip(_translate("MainWindow", "Sets the maximum difference between the number of HBA of the active ligand and its respective decoys. When set to 0, decoys must have the exact same number of HBA in order to be accepted.", None))
        self.hBALabel_2.setWhatsThis(_translate("MainWindow", "Sets the maximum difference between the number of HBA of the active ligand and its respective decoys. When set to 0, decoys must have the exact same number of HBA in order to be accepted.", None))
        self.hBALabel_2.setText(_translate("MainWindow", "Hydrogen Bond Acceptors ±", None))
        self.hBDLabel.setToolTip(_translate("MainWindow", "Sets the maximum difference between the number of HBD of the active ligand and its respective decoys. When set to 0, decoys must have the exact same number of HBD in order to be accepted.", None))
        self.hBDLabel.setWhatsThis(_translate("MainWindow", "Sets the maximum difference between the number of HBD of the active ligand and its respective decoys. When set to 0, decoys must have the exact same number of HBD in order to be accepted.", None))
        self.hBDLabel.setText(_translate("MainWindow", "Hydrogen Bond Donors ±", None))
        self.molecularWeightLabel.setToolTip(_translate("MainWindow", "Sets the maximum difference in molecular weight between the active ligand and its respective decoys. When set to 0, decoys must have the exact same molecular weight in order to be accepted.", None))
        self.molecularWeightLabel.setWhatsThis(_translate("MainWindow", "Sets the maximum difference in molecular weight between the active ligand and its respective decoys. When set to 0, decoys must have the exact same molecular weight in order to be accepted.", None))
        self.molecularWeightLabel.setText(_translate("MainWindow", "Molecular weight ±", None))
        self.molwtBox.setSuffix(_translate("MainWindow", " Da", None))
        self.rtotationalBondsLabel.setToolTip(_translate("MainWindow", "Sets the maximum difference between the number of rotational bonds of the active ligand and its respective decoys. When set to 0, decoys must have the exact same number of rotational bonds in order to be accepted.", None))
        self.rtotationalBondsLabel.setWhatsThis(_translate("MainWindow", "Sets the maximum difference between the number of rotational bonds of the active ligand and its respective decoys. When set to 0, decoys must have the exact same number of rotational bonds in order to be accepted.", None))
        self.rtotationalBondsLabel.setText(_translate("MainWindow", "Rotational bonds ±", None))
        self.clogPLabel.setToolTip(_translate("MainWindow", "Sets the maximum difference between active ligand\'s logP value and the logP values of its respective decoys. When set to 0, decoys must have the exact same logP value in order to be accepted.", None))
        self.clogPLabel.setWhatsThis(_translate("MainWindow", "Sets the maximum difference between active ligand\'s logP value and the logP values of its respective decoys. When set to 0, decoys must have the exact same logP value in order to be accepted.", None))
        self.clogPLabel.setText(_translate("MainWindow", "Octanol-water partition coefficient (logP) ±", None))
        self.maximumDecoysPerActiveLigandLabel.setToolTip(_translate("MainWindow", "After finding this many decoys for a given active ligand, decoy search for that ligand will stop. \n"
"\n"
"If set to 0, there is no upper limit in the number of decoys per active ligand to find.", None))
        self.maximumDecoysPerActiveLigandLabel.setWhatsThis(_translate("MainWindow", "After finding this many decoys for a given active ligand, decoy search for that ligand will stop. \n"
"\n"
"If set to 0, there is no upper limit in the number of decoys per active ligand to find.", None))
        self.maximumDecoysPerActiveLigandLabel.setText(_translate("MainWindow", "Maximum decoys per active ligand", None))
        self.decoyLimitLabel.setToolTip(_translate("MainWindow", "Decoy search will not stop until this many decoys have been found for each ligand or the decoy sources have been completely parsed.\n"
"\n"
"If set to 0, the search will not stop until the above maximum number of decoys has been found for all active ligands (if the maximum is set to other than 0) or all decoy sources have been completely parsed.", None))
        self.decoyLimitLabel.setWhatsThis(_translate("MainWindow", "Decoy search will not stop until this many decoys have been found for each ligand or the decoy sources have been completely parsed.\n"
"\n"
"If set to 0, the search will not stop until the above maximum number of decoys has been found for all active ligands (if the maximum is set to other than 0) or all decoy sources have been completely parsed.", None))
        self.decoyLimitLabel.setText(_translate("MainWindow", "Minimum decoys per active ligand:", None))
        self.decoyMinSpinBox.setToolTip(_translate("MainWindow", "Limit how many decoys to find for each ligand. If the limit is 0, there is no limit.", None))
        self.label_4.setText(_translate("MainWindow", "Maximum standard deviations away from active", None))
        self.cacheButton.setToolTip(_translate("MainWindow", "This is the directory where temporary ZINC files will be downloaded.\n"
"They will be kept here if the \'Use cache\' option is enabled, otherwise they will be removed after they have been parsed.\n"
"\n"
"If the \'Use cache\' option is enabled, it is recommended to place the cache directory in a filesystem with 20+ Gb of free space.", None))
        self.cacheButton.setWhatsThis(_translate("MainWindow", "This is the directory where temporary ZINC files will be downloaded.\n"
"They will be kept here if the \'Use cache\' option is enabled, otherwise they will be removed after they have been parsed.\n"
"\n"
"If the \'Use cache\' option is enabled, it is recommended to place the cache directory in a filesystem with 20+ Gb of free space.", None))
        self.cacheButton.setText(_translate("MainWindow", "Cache directory", None))
        self.defaultsButton.setToolTip(_translate("MainWindow", "Load default values for all options", None))
        self.defaultsButton.setWhatsThis(_translate("MainWindow", "Load default values for all options", None))
        self.defaultsButton.setText(_translate("MainWindow", "Load Defaults", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabWidgetPage2), _translate("MainWindow", "Options", None))
        self.clearButton.setToolTip(_translate("MainWindow", "Clears all items from all lists and tables", None))
        self.clearButton.setWhatsThis(_translate("MainWindow", "Clears all items from all lists and tables", None))
        self.clearButton.setText(_translate("MainWindow", "Clear all", None))
        self.stopButton.setToolTip(_translate("MainWindow", "Interrupt the current search. Decoys found so far will be saved in the output file. The search can be resumed by selecting the same active ligand files and decoy sources, plus enabling the \'Add new decoys option\' at the top of this tab and adding the interrupted search output file to the existing decoy files list.", None))
        self.stopButton.setWhatsThis(_translate("MainWindow", "Interrupt the current search. Decoys found so far will be saved in the output file. The search can be resumed by selecting the same active ligand files and decoy sources, plus enabling the \'Add new decoys option\' at the top of this tab and adding the interrupted search output file to the existing decoy files list.", None))
        self.stopButton.setText(_translate("MainWindow", "Stop", None))
        self.findDecoysButton.setToolTip(_translate("MainWindow", "Start the search. Depending on the options set and the decoy sources chosen, this can take some time.", None))
        self.findDecoysButton.setWhatsThis(_translate("MainWindow", "Start the search. Depending on the options set and the decoy sources chosen, this can take some time.", None))
        self.findDecoysButton.setText(_translate("MainWindow", "Find decoys", None))
        self.progressBar.setFormat(_translate("MainWindow", "%v decoys found", None))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar", None))
        self.actionHelp.setText(_translate("MainWindow", "DecoyFinder Website", None))
        self.actionHelp.setShortcut(_translate("MainWindow", "Alt+W", None))
        self.actionAbout.setText(_translate("MainWindow", "About DecoyFinder", None))

import resources_rc

if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    MainWindow = QtGui.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

